package io.milvus.response;

import io.milvus.grpc.GetImportStateResponse;
import io.milvus.grpc.ImportState;
import io.milvus.grpc.KeyValuePair;
import io.milvus.param.Constant;
import lombok.NonNull;

import java.util.List;

/**
 * Util class to wrap response of <code>getImportState</code> interface.
 */
public class GetImportStateWrapper {
    private final GetImportStateResponse response;

    public GetImportStateWrapper(@NonNull GetImportStateResponse response) {
        this.response = response;
    }

    /**
     * Gets ID of the import task.
     *
     * @return Long ID of the import task
     */
    public long getTaskID() {
        return response.getId();
    }

    /**
     * Gets the long ID array for auto-id primary key, generated by import task.
     *
     * @return List&lt;Long&gt; ID array returned by import task
     */
    public List<Long> getAutoGeneratedIDs() {
        return response.getIdListList();
    }

    /**
     * Gets state of the import task.
     *
     * @return ImportState state of the import task
     */
    public ImportState getState() {
        return response.getState();
    }

    /**
     * Gets how many rows were imported by the import task.
     *
     * @return Long how many rows were imported by the import task
     */
    public long getImportedCount() {
        return response.getRowCount();
    }

    /**
     * Gets failed reason of the import task.
     *
     * @return String failed reason of the import task
     */
    public String getFailedReason() {
        return getInfo(Constant.FAILED_REASON);
    }

    /**
     * Gets target files of the import task.
     *
     * @return String target files of the import task
     */
    public String getFiles() {
        return getInfo(Constant.IMPORT_FILES);
    }

    private String getInfo(@NonNull String key) {
        List<KeyValuePair> infos = response.getInfosList();
        for (KeyValuePair kv : infos) {
            if (kv.getKey().compareTo(key) == 0) {
                return kv.getValue();
            }
        }

        return "";
    }

    /**
     * Construct a <code>String</code> by {@link DescCollResponseWrapper} instance.
     *
     * @return <code>String</code>
     */
    @Override
    public String toString() {
        return "Import task state{" +
                ", autoGeneratedIDs:" + getAutoGeneratedIDs() +
                ", state:" + getState().name() +
                ", failed reason:" + getFailedReason() +
                ", files:" + getFiles() +
                '}';
    }
}
